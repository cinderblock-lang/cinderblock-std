namespace std.iterable {
  export struct CountContext {
    next: () -> CountContext;
    done: bool;
    result?: int;
  }

  export fn Count(target: int): CountContext {
    return make CountContext {
      assign done = target == 0i;

      store wrapper = (current: int) -> {
        return make CountContext {
          assign done = current == target;

          assign next = fn () -> wrapper(current + 1i);

          assign result = current + 1i;
        };
      };

      assign next = fn () -> wrapper(0i);
    };
  }
}